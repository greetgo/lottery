def nowDate = new Date()
def nowFormattedDate = nowDate.format("yyyy-MM-dd/HH:mm:ss")
def vendorName = "greetgo!"
def ggRepo = System.getenv('GG_REPO')

allprojects {
  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'maven'
  apply plugin: 'idea'

  version = '0.0.1'
  group = "kz.greetgo.sandbox"

  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
  [compileJava, compileTestJava]*.options*.debugOptions*.debugLevel = "source,lines,vars"

  eclipse.project.natures 'org.springsource.ide.eclipse.gradle.core.nature'
}

subprojects {

  project.eclipse.classpath.file.whenMerged { cp ->
    if (project.hasProperty("sourceCompatibility")) {
      cp.entries.findAll { it.path.contains('JRE_CONTAINER') }.each {
        it.path += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/" +
          "JavaSE-$project.sourceCompatibility"
      }
    }
  }

  repositories {
    mavenLocal()
    if (ggRepo?.trim()) maven { url ggRepo.trim() }
    jcenter()
  }

  dependencies {
    ext.jacksonVersion = "2.7.3"
    ext.depinjectVersion = '2.0.0'
    ext.greetgoDbVersion = '2.0.0'
    ext.greetgoConfVersion = '0.1.5'
    ext.greetgoMvcVersion = "2.0.7"
    ext.jettyVersion = '9.4.0.v20161208'
    ext.guavaVersion = '23.0'

    testCompile 'org.testng:testng:6.5.1'
    compile 'org.easytesting:fest-assert-core:2.0M10'

    //compile 'com.google.code.findbugs:annotations:2.0.1'
  }

  jar {
    manifest {
      attributes 'Implementation-Title': project.name
      attributes 'Implementation-Version': version
      attributes 'Implementation-Vendor': vendorName
      attributes 'Created-By': System.getProperty("user.name")
      attributes 'Created-At': nowFormattedDate
    }
  }

  test.useTestNG()

  idea.module.inheritOutputDirs = false
  idea.module.outputDir = file("$buildDir/classes/main/")
  idea.module.testOutputDir = file("$buildDir/classes/test/")

  sourceSets.main.java.srcDirs = ["src"]
  sourceSets.test.java.srcDirs = ["test_src"]
  sourceSets.main.resources.srcDirs = ["src_resources"]
  sourceSets.test.resources.srcDirs = ["test_resources"]

  sourceSets.main.resources {
    srcDirs += sourceSets.main.java.srcDirs
    exclude '**/*.java'
  }
  sourceSets.test.resources {
    srcDirs += sourceSets.test.java.srcDirs
    exclude '**/*.java'
  }
}
